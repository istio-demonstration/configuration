# geteway for postgres
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: postgres-gateway
  namespace: default
spec:
  selector:
    istio: ingressgateway 
  servers:
  - port:
      number: 8080
      name: tcp
      protocol: TCP
    hosts:
    - "*"

---

kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: postgres-db
  namespace: default
spec:
  hosts:      # which incoming host are we applying the proxy rules to???
    - "*" 
  gateways:
    - postgres-gateway
  tcp:
   - route:
       - destination:
           host: postgres-db.default.svc.cluster.local
           port: 
             number: 5432
           subset: original
         weight: 100

---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: postgres-db
  namespace: default
spec:
  host: postgres-db.default.svc.cluster.local
  subsets:
    - labels:
        version: original
      name: original
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ingress-gateway-configuration
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "www.chatroom365.com"  # Domain name of the external website
    - "jenkins.chatroom365.com"
    - "api.chatroom365.com"
    - "kiali.chatroom365.com"

---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: web-app
  namespace: default
spec:
  # if you call a service in another namespace , then you need the fully qualified domain name.
  # like: <service-name>.<namespace-name>.svc.cluster.local
  hosts:      # which incoming host are we applying the proxy rules to???
    - "www.chatroom365.com" # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
    - route:
        - destination:
            host: web-app.default.svc.cluster.local
            subset: original
          weight: 90
        - destination:
            host: web-app.default.svc.cluster.local
            subset: experimental
          weight: 10
---
#load balancing for k8s service:web-app
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: web-app
  namespace: default
spec:
  host: web-app.default.svc.cluster.local
  subsets:
    - labels:
        version: original
      name: original
    - labels:
        version: experimental
      name: experimental

---
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: jenkins
  namespace: default
spec:
  hosts:      # which incoming host are we applying the proxy rules to???
    - "jenkins.chatroom365.com" # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
    - route:
        - destination:
            host: jenkins.default.svc.cluster.local
            subset: original
          weight: 100
        - destination:
            host: jenkins.default.svc.cluster.local
            subset: experimental
          weight: 0
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: jenkins
  namespace: default
spec:
  host: jenkins.default.svc.cluster.local
  subsets:
    - labels:
        version: original
      name: original
    - labels:
        version: experimental
      name: experimental
---
# for kiali
kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: kiali
  namespace: default
spec:
  hosts:      # which incoming host are we applying the proxy rules to???
    - "kiali.chatroom365.com" # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
    - route:
        - destination:
            host: kiali.istio-system.svc.cluster.local
            port:
              number: 20001
          weight: 100

---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: kiali
  namespace: default
spec:
  host: kiali.istio-system.svc.cluster.local
  subsets:
    - labels:
        app: kiali
      name: kialiapp

---

kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: chat-api
  namespace: default
spec:
  hosts:      # which incoming host are we applying the proxy rules to???
    - "api.chatroom365.com" # Copy the value in the gateway hosts - usually a Domain Name
  gateways:
    - ingress-gateway-configuration
  http:
    - route:
        - destination:
            host: chat-api.default.svc.cluster.local
            subset: original
          weight: 90
        - destination:
            host: chat-api.default.svc.cluster.local
            subset: experimental
          weight: 10
---
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: chat-api
  namespace: default
spec:
  host: chat-api.default.svc.cluster.local
  subsets:
    - labels:
        version: original
      name: original
    - labels:
        version: experimental
      name: experimental

